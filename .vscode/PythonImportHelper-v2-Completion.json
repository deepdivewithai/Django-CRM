[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Agent",
        "importPath": "leads.models",
        "description": "leads.models",
        "isExtraImport": true,
        "detail": "leads.models",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "AuthenticateConfig",
        "kind": 6,
        "importPath": "authenticate.apps",
        "description": "authenticate.apps",
        "peekOfCode": "class AuthenticateConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authenticate'",
        "detail": "authenticate.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "authenticate.urls",
        "description": "authenticate.urls",
        "peekOfCode": "app_name = 'auth'\nurlpatterns = [\n    path('signup/', views.SignUp, name='signup'),\n    path('login/', views.LogIn, name='login'),\n    path('logout/', views.LogOut, name='logout'),\n]",
        "detail": "authenticate.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "authenticate.urls",
        "description": "authenticate.urls",
        "peekOfCode": "urlpatterns = [\n    path('signup/', views.SignUp, name='signup'),\n    path('login/', views.LogIn, name='login'),\n    path('logout/', views.LogOut, name='logout'),\n]",
        "detail": "authenticate.urls",
        "documentation": {}
    },
    {
        "label": "SignUp",
        "kind": 2,
        "importPath": "authenticate.views",
        "description": "authenticate.views",
        "peekOfCode": "def SignUp(request):\n    print(request.POST)\n    if request.method == 'POST':\n        username = request.POST['username']\n        first_name = request.POST['fname']\n        last_name = request.POST['lname']\n        email = request.POST['email']\n        pass1 = request.POST['pass1']\n        pass2 = request.POST['pass2']\n        if not username.isalnum():",
        "detail": "authenticate.views",
        "documentation": {}
    },
    {
        "label": "LogIn",
        "kind": 2,
        "importPath": "authenticate.views",
        "description": "authenticate.views",
        "peekOfCode": "def LogIn(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        pass1 = request.POST['pass1']\n        user = authenticate(username=username, password=pass1)\n        if user is not None:\n            name = user.username\n            login(request, user)\n            return render(request, 'landing_page.html', context={'name': name})\n        else:",
        "detail": "authenticate.views",
        "documentation": {}
    },
    {
        "label": "LogOut",
        "kind": 2,
        "importPath": "authenticate.views",
        "description": "authenticate.views",
        "peekOfCode": "def LogOut(request):\n    logout(request)\n    return redirect(\"home\")",
        "detail": "authenticate.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "DJCRM.asgi",
        "description": "DJCRM.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "DJCRM.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-#f9a5do4kp1yxk33wh2agk8sm(s1hw@!1-j89rvg#&3-iqhrvz'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-#f9a5do4kp1yxk33wh2agk8sm(s1hw@!1-j89rvg#&3-iqhrvz'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'authenticate',",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'authenticate',\n    'leads',\n]",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'DJCRM.urls'",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "ROOT_URLCONF = 'DJCRM.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "WSGI_APPLICATION = 'DJCRM.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nSTATIC_ROOT = 'static_root'",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nSTATIC_ROOT = 'static_root'\n# Default primary key field type",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nSTATIC_ROOT = 'static_root'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nSTATIC_ROOT = 'static_root'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"leads.Agent\"",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nSTATIC_ROOT = 'static_root'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"leads.Agent\"",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "STATIC_ROOT = 'static_root'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"leads.Agent\"",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"leads.Agent\"",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "DJCRM.settings",
        "description": "DJCRM.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"leads.Agent\"",
        "detail": "DJCRM.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "DJCRM.urls",
        "description": "DJCRM.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', TemplateView.as_view(template_name='landing_page.html'), name='home'),\n    path('auth/', include('authenticate.urls', namespace='auth')),\n    path('leads/', include('leads.urls', namespace='leads'))\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "DJCRM.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "DJCRM.wsgi",
        "description": "DJCRM.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "DJCRM.wsgi",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "env.Scripts.activate_this",
        "description": "env.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "keys.keys",
        "description": "keys.keys",
        "peekOfCode": "SECRET_KEY = 'django-insecure-#f9a5do4kp1yxk33wh2agk8sm(s1hw@!1-j89rvg#&3-iqhrvz'",
        "detail": "keys.keys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "leads.migrations.0001_initial",
        "description": "leads.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Agent',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "leads.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "leads.migrations.0002_alter_lead_age",
        "description": "leads.migrations.0002_alter_lead_age",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('leads', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='lead',\n            name='age',\n            field=models.PositiveBigIntegerField(default=0),\n        ),",
        "detail": "leads.migrations.0002_alter_lead_age",
        "documentation": {}
    },
    {
        "label": "LeadsConfig",
        "kind": 6,
        "importPath": "leads.apps",
        "description": "leads.apps",
        "peekOfCode": "class LeadsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'leads'",
        "detail": "leads.apps",
        "documentation": {}
    },
    {
        "label": "LeadModelForm",
        "kind": 6,
        "importPath": "leads.forms",
        "description": "leads.forms",
        "peekOfCode": "class LeadModelForm(forms.ModelForm):\n    class Meta:\n        model = Lead\n        fields = (\n            'first_name',\n            'last_name',\n            'age',\n            'email',\n            'agent'\n        )",
        "detail": "leads.forms",
        "documentation": {}
    },
    {
        "label": "AgentModelForm",
        "kind": 6,
        "importPath": "leads.forms",
        "description": "leads.forms",
        "peekOfCode": "class AgentModelForm(forms.ModelForm):\n    class Meta:\n        model = Agent\n        fields = (\n            'username',\n            'email',\n            'password',\n        )",
        "detail": "leads.forms",
        "documentation": {}
    },
    {
        "label": "Agent",
        "kind": 6,
        "importPath": "leads.models",
        "description": "leads.models",
        "peekOfCode": "class Agent(AbstractUser):\n    pass\nclass Lead(models.Model):\n    first_name = models.CharField(max_length=20)\n    last_name = models.CharField(max_length=20)\n    age = models.PositiveBigIntegerField(default=0)\n    email = models.EmailField()\n    agent = models.ForeignKey(Agent, on_delete=models.CASCADE)\n    def __str__(self) -> str:\n        return self.first_name",
        "detail": "leads.models",
        "documentation": {}
    },
    {
        "label": "Lead",
        "kind": 6,
        "importPath": "leads.models",
        "description": "leads.models",
        "peekOfCode": "class Lead(models.Model):\n    first_name = models.CharField(max_length=20)\n    last_name = models.CharField(max_length=20)\n    age = models.PositiveBigIntegerField(default=0)\n    email = models.EmailField()\n    agent = models.ForeignKey(Agent, on_delete=models.CASCADE)\n    def __str__(self) -> str:\n        return self.first_name",
        "detail": "leads.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "leads.urls",
        "description": "leads.urls",
        "peekOfCode": "app_name = 'leads'\nurlpatterns = [\n    path('', views.LeadsList.as_view(), name='lead-list'),\n    path('agent-list/', views.AgentsList.as_view(), name='agent-list'),\n    path('<int:pk>/', views.LeadDetailView.as_view(), name='lead-detail'),\n    path('<int:pk>/delete', views.LeadDeleteView.as_view(), name='lead-delete'),\n    path('<int:pk>/update', views.LeadUpdateView.as_view(), name='lead-update'),\n    path('lead-create/', views.LeadCreateView.as_view(), name='lead-create'),\n    path('agent-create/', views.AgentCreateView.as_view(), name='agent-create'),\n]",
        "detail": "leads.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "leads.urls",
        "description": "leads.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.LeadsList.as_view(), name='lead-list'),\n    path('agent-list/', views.AgentsList.as_view(), name='agent-list'),\n    path('<int:pk>/', views.LeadDetailView.as_view(), name='lead-detail'),\n    path('<int:pk>/delete', views.LeadDeleteView.as_view(), name='lead-delete'),\n    path('<int:pk>/update', views.LeadUpdateView.as_view(), name='lead-update'),\n    path('lead-create/', views.LeadCreateView.as_view(), name='lead-create'),\n    path('agent-create/', views.AgentCreateView.as_view(), name='agent-create'),\n]",
        "detail": "leads.urls",
        "documentation": {}
    },
    {
        "label": "AgentsList",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class AgentsList(ListView):\n    template_name = 'agents/agent_list.html'\n    queryset = Agent.objects.all()\n    context_object_name = 'agents'\nclass AgentCreateView(CreateView):\n    template_name = 'agents/agent_create.html'\n    form_class = AgentModelForm\n    def get_success_url(self) -> str:\n        return reverse(\"leads:agent-list\")\n    def form_valid(self, form):",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "AgentCreateView",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class AgentCreateView(CreateView):\n    template_name = 'agents/agent_create.html'\n    form_class = AgentModelForm\n    def get_success_url(self) -> str:\n        return reverse(\"leads:agent-list\")\n    def form_valid(self, form):\n            return super().form_valid(form)\n# Leads\nclass LeadsList(ListView):\n    template_name = 'leads/lead_list.html'",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "LeadsList",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class LeadsList(ListView):\n    template_name = 'leads/lead_list.html'\n    queryset = Lead.objects.all()\n    context_object_name = 'leads'\nclass LeadDetailView(DetailView):\n    template_name = \"leads/lead_detail.html\"\n    queryset = Lead.objects.all()\n    context_object_name = 'lead'\nclass LeadCreateView(CreateView):\n    template_name = 'leads/lead_create.html'",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "LeadDetailView",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class LeadDetailView(DetailView):\n    template_name = \"leads/lead_detail.html\"\n    queryset = Lead.objects.all()\n    context_object_name = 'lead'\nclass LeadCreateView(CreateView):\n    template_name = 'leads/lead_create.html'\n    form_class = LeadModelForm\n    def get_success_url(self) -> str:\n        return reverse(\"leads:lead-list\")\n    def form_valid(self, form):",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "LeadCreateView",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class LeadCreateView(CreateView):\n    template_name = 'leads/lead_create.html'\n    form_class = LeadModelForm\n    def get_success_url(self) -> str:\n        return reverse(\"leads:lead-list\")\n    def form_valid(self, form):\n        return super(LeadCreateView, self).form_valid(form)\nclass LeadUpdateView(UpdateView):\n    template_name = 'leads/lead_update.html'\n    form_class = LeadModelForm",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "LeadUpdateView",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class LeadUpdateView(UpdateView):\n    template_name = 'leads/lead_update.html'\n    form_class = LeadModelForm\n    queryset = Lead.objects.all()\n    def get_success_url(self) -> str:\n        return reverse(\"leads:lead-detail\", kwargs={'pk': self.object.pk})\nclass LeadDeleteView(DeleteView):\n    template_name = 'leads/lead_delete.html'\n    queryset = Lead.objects.all()\n    def get_success_url(self) -> str:",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "LeadDeleteView",
        "kind": 6,
        "importPath": "leads.views",
        "description": "leads.views",
        "peekOfCode": "class LeadDeleteView(DeleteView):\n    template_name = 'leads/lead_delete.html'\n    queryset = Lead.objects.all()\n    def get_success_url(self) -> str:\n        return reverse(\"leads:lead-list\")",
        "detail": "leads.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'DJCRM.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]